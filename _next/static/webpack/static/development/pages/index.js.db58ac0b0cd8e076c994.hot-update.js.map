{"version":3,"file":"static/webpack/static/development/pages/index.js.db58ac0b0cd8e076c994.hot-update.js","sources":["webpack:///./components/Tester.js"],"sourcesContent":["import { useContext } from \"react\";\nimport useTypeChoices from \"../lib/useTypeChoices\";\nimport styled from \"@emotion/styled\";\nimport { useState, useEffect } from \"react\";\nimport useVariableFont from \"react-variable-fonts\";\nimport Markdown from \"markdown-to-jsx\";\nimport texts from \"../data/texts\";\nimport Page from \"./Page\";\nimport RangeSlider from \"./RangeSlider\";\n\nconst initialSettings = {\n  LXND: 0\n};\n\nconst Tester = ({ weight, lxnd }) => {\n  const { axis, setAxis, customStyles } = useContext(useTypeChoices);\n\n  switch (weight) {\n    case \"default\":\n      lxnd = 0;\n      break;\n    case \"Regular\":\n      lxnd = 0;\n      break;\n    case \"Deca\":\n      lxnd = 0;\n      break;\n    case \"Exa\":\n      lxnd = 40;\n      break;\n    case \"Giga\":\n      lxnd = 56;\n      break;\n    case \"Mega\":\n      lxnd = 64;\n      break;\n    case \"Peta\":\n      lxnd = 72;\n      break;\n    case \"Tera\":\n      lxnd = 80;\n      break;\n    case \"Zetta\":\n      lxnd = 96;\n      break;\n    default:\n      lxnd = axis.LXND;\n      break;\n  }\n\n  const style = {\n    fontVariationSettings: `'LXND' ${lxnd}`\n  };\n\n  const exampleCSS = `h1, p { font-variation-settings: 'LXND' ${axis.LXND}; }`;\n  return (\n    <Container>\n      {weight && <Weight style={{ ...style }}>{weight}</Weight>}\n      <Title style={{ ...style }}>LEXEND</Title>\n\n      {!weight && (\n        <Controls>\n          <p style={{ ...style }} />\n          <label htmlFor=\"lxnd-axis\">Variable Width + Bounding Box</label>\n          <RangeSlider\n            id=\"lxnd-axis\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={axis.LXND}\n            onChange={({ target }) => setAxis({ LXND: target.value })}\n          />\n          <label htmlFor=\"lxnd-axis\">Variable Font Settings for CSS</label>\n          <pre>\n            <code>{exampleCSS}</code>\n          </pre>\n        </Controls>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled(\"section\")`\n  padding: 1.618rem 1.618rem;\n`;\nconst Weight = styled(\"span\")`\n  text-transform: uppercase;\n  font-size: 80%;\n  letter-spacing: 2px;\n`;\n\nconst Controls = styled(\"nav\")`\n  max-width: 800px;\n  padding: 1rem 0.618rem;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  margin-top: 0;\n  margin-bottom: 1.618rem;\n  @media (max-width: 960px) {\n    max-width: 100%;\n  }\n  input {\n    cursor: grab;\n    width: 100%;\n  }\n  label {\n    display: block;\n    text-transform: uppercase;\n    font-size: 0.718rem;\n    letter-spacing: 2px;\n    margin: 2.618rem 0 0.618rem;\n  }\n  @media (max-width: 960px) {\n    width: 100%;\n  }\n`;\n\nconst H1 = styled(\"h1\")`\n  font-size: 5.4vw !important;\n  line-height: 1;\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n  span {\n    display: inline-block;\n    margin: 2px;\n    border: 1px dashed rgba(0, 0, 0, 0.12);\n  }\n  & + p {\n    margin-left: 0.392rem;\n  }\n  @media (max-width: 960px) {\n    font-size: 12vw !important;\n  }\n`;\n\nconst Title = ({ children, ...props }) => (\n  <H1>\n    {children.split(\"\").map((child, i) => (\n      <span key={`${child}-${i}`} {...props}>\n        {child}\n      </span>\n    ))}\n  </H1>\n);\n\nexport default Tester;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AA9BA;AACA;AAgCA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAGA;AAMA;AA2BA;AACA;AAkBA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AACA;AASA;;;;A","sourceRoot":""}